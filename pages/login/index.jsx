import React, { Fragment, useState } from "react";
import Head from "next/head";
import LoginBackground from "../../components/background/LoginBackground.jsx";
import DefaultContainer from "../../components/container/DefaultContainer.jsx";
import { InputNumber, InputPassword, autoCompleteTypes } from "../../components/ui/input/Input.jsx";
import { Formik, Form, Field } from "formik";
import styles from "./Login.module.css";
import { UserContext, useUserContext } from "../../contexts/UserContext.jsx";

import { signIn } from "next-auth/client";
import { useRouter } from "next/router";

import { TextField, Button } from "@material-ui/core";

function Login() {
  const { user, setUser } = useUserContext();

  const router = useRouter();

  const handleSubmit = (values, { setSubmitting }) => {
    setSubmitting(true);
    const signInHandler = async () => {
      const result = await signIn("credentials", {
        redirect: false,
        employeeID: values.employeeID,
        password: values.password,
      });

      if (!result.error) {
        // set some auth state
        router.replace("/");
      } else {
        console.log(result.error);
      }
      setSubmitting(false);
    };
    signInHandler();
  };

  return (
    <Fragment>
      <Head>
        <title>IEM | FACULTY BOOK</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <DefaultContainer>
        <LoginBackground />
        <div className={styles.login_page_container}>
          <div className={styles.banner}>
            <div className={styles.banner_content}>IEM | FACULTY BOOK</div>
          </div>
          <div className={styles.auth_container}>
            <h1>Welcome Back!</h1>
            <Formik
              initialValues={{ employeeID: "", password: "" }}
              /*               validationSchema={Yup.object({})} */
              onSubmit={handleSubmit}
            >
              {({
                values,
                errors,
                touched,
                handleChange,
                handleBlur,
                handleSubmit,
                isSubmitting,
              }) => (
                <Form>
                  {/*                   <InputNumber
                    id="ID"
                    label="ID"
                    name="employeeID"
                    placeholder="12020002002XXX"
                    value={values.employeeID}
                    handleChange={handleChange}
                    handleBlur={handleBlur}
                  />
                  <InputPassword
                    id="password"
                    label="Password"
                    name="password"
                    placeholder="password"
                    value={values.password}
                    handleChange={handleChange}
                    handleBlur={handleBlur}
                    autoComplete={autoCompleteTypes.currentPassword}
                    isVisible={true}
                  />
                  <button disabled={isSubmitting}>Log In</button> */}
                  <TextField
                    variant="filled"
                    label="EmployeeID"
                    name="employeeID"
                    placeholder="12020002002XXX"
                    onChange={handleChange}
                    onBlur={handleBlur}
                    autoComplete={true}
                    value={values.employeeID}
                  ></TextField>
                  <TextField
                    variant="filled"
                    label="Password"
                    name="password"
                    placeholder="password"
                    onChange={handleChange}
                    onBlur={handleBlur}
                    autoComplete={true}
                    value={values.password}
                  ></TextField>
                  <Button type="submit" color="primary" disabled={isSubmitting}>
                    Log In
                  </Button>
                  <br />
                  {/*                   <TextField id="standard-basic" label="Standard" />
                  <TextField id="filled-basic" label="Filled" variant="filled" />
                  <TextField id="outlined-basic" label="Outlined" variant="outlined" /> */}
                </Form>
              )}
            </Formik>
            {/*             <pre>{JSON.stringify(user, null, 2)}</pre>
            <button
              onClick={async () => {
                setUser({ id: "orange mama" });
              }}
            >
              Change User
            </button> */}
          </div>
        </div>
      </DefaultContainer>
    </Fragment>
  );
}

export default Login;
